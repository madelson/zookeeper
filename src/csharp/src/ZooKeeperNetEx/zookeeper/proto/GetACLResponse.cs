// note: decompiled from ZooKeeperNetEx source
// File generated by hadoop record compiler. Do not edit.

#pragma warning disable

using System.Collections.Generic;
using org.apache.jute;

namespace org.apache.zookeeper.proto
{
    internal class GetACLResponse : Record
    {
        private List<org.apache.zookeeper.data.ACL> acl;
        private org.apache.zookeeper.data.Stat stat;
        public GetACLResponse() { }
        public GetACLResponse(List<org.apache.zookeeper.data.ACL> acl, org.apache.zookeeper.data.Stat stat)
        {
            this.acl = acl;
            this.stat = stat;
        }
        public List<org.apache.zookeeper.data.ACL> getAcl() { return acl; }
        internal void setAcl(List<org.apache.zookeeper.data.ACL> m_) { acl = m_; }

        public org.apache.zookeeper.data.Stat getStat() { return stat; }
        internal void setStat(org.apache.zookeeper.data.Stat m_) { stat = m_; }

        void Record.serialize(OutputArchive a_, string tag)
        {
            {
                a_.startVector(acl, "acl");
                if (acl != null)
                {
                    foreach (var e1 in acl) a_.writeRecord(e1, "e1");
                }
            }
            a_.writeRecord(stat, "stat");
        }
        void Record.deserialize(InputArchive a_, string tag)
        {
            {
                Index vidx1 = a_.startVector("acl");
                if (vidx1 != null)
                {
                    var tmpLst = new List<org.apache.zookeeper.data.ACL>();
                    for (; !vidx1.done(); vidx1.incr())
                    {
                        org.apache.zookeeper.data.ACL e1;
                        e1 = new org.apache.zookeeper.data.ACL();
                        a_.readRecord(e1, "e1");
                        tmpLst.Add(e1);
                    }
                    acl = tmpLst;
                }
            }
            stat = new org.apache.zookeeper.data.Stat();
            a_.readRecord(stat, "stat");
        }
    }
}
